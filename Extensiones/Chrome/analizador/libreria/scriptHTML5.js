/*
    This Analizador-HTML5 consists of a tool for the analysis (lexical, syntactical and semantic) of HTML5 structures. The application was done purely in JavaScript, so it will not require an Internet connection to be used.

    The project was presented as a thesis project for my university, so it only covers a portion of the W3C standard for HTML5 to date.

    For the analysis, the W3C recommendation of October 28, 2014, was taken into account.

    Copyright (C) 2015  Humberto Soler S.
    
scriptHTML5.js is part of Analizador-HTML5.

    Analizador-HTML5 is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Analizador-HTML5 is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Analizador-HTML.  If not, see <http://www.gnu.org/licenses/>.

 */

 'use stric';
 /**
  * Separates and returns the HTML tags present in the document. / Separa y retorna las etiquetas HTML presentes en el documento.
 * @param  {string} html - Contains the browser's HTML code. / Contiene el código HTML del navegador.
  * @return {object} which contains an array of tags and a chain with the original document. / El cual contiene un arreglo de etiquetas y una cadena con el documento original.
  */
function getEtiquetas (html){
	
	var file = JSON.stringify(document.URL).split('"').join("");
	var rawFile = new XMLHttpRequest();
	var fuenteHTML; 
	var fuente;
	var strCopia  = [];

 /**
     * fuenteHTML Contains the browser code which get only the tag. / fuenteHTML contiene el código obtenido del navegador del cual obtendremos solo las etiquetas.
     * @type {string}
     */
    
    fuenteHTML = html;
    fuente = html;

    // in this section we separated from the rest of the html code. / en está sección separamos el código html del resto.
    fuenteHTML = fuenteHTML.replace(/(<svg((.|\n|\t|\r)*?)*?<\/svg\s*>)/gmi,'<svg></svg>');
    fuenteHTML = fuenteHTML.replace(/(<math((.|\n|\t|\r)*?)*?<\/math\s*>)/gmi,'<math></math>');

    fuenteHTML = fuenteHTML.replace(/((<script((.|\n|\t|\r)*?)*?>)((.|\n|\t|\r)*?)*?<\/script\s*>)/gmi,'$2</script>');
    fuenteHTML = fuenteHTML.replace(/((<style((.|\n|\t|\r)*?)*?>)((.|\n|\t|\r)*?)*?<\/style\s*>)/gmi,'$2</style>');
    fuenteHTML = fuenteHTML.replace(/(<[a-z0-9]*\:)/gmi,'');
    
	fuenteHTML = fuenteHTML.replace(/(<!--(.|\t|\n|\r)*?-->)/gmi,' ');
	fuenteHTML = fuenteHTML.replace(/(<!--(.)*-->)/gmi,' ');
	fuenteHTML = fuenteHTML.replace(/(<!--([]|\t|\n|\r)*-->)/gmi,' ');

	var validar = fuenteHTML.match(new RegExp('((\=\s*\"([^"]*)\")|(\=\s*\'([^\']*)\'))', "gmi")); 
	
	for(var i in validar){
		if((validar[i] instanceof String)){
			    strCopia.push(validar[i].replace(/(\>)/gmi,'&#62;'));
		}
		else{
			validar[i] = '';
		}
	}

	for(var i in validar)				
	   	fuenteHTML =fuenteHTML.replace(validar[i],strCopia[i]);
	
	var tags_arbol = fuenteHTML.match(
		new RegExp("((</([a-z0-9]+(\s|\t)*)>)|(<\!(DOCTYPE)\t*[^>]*>)|(((<[a-z0-9]+\s*))(([a-z0-9]*)\s*\=*(((\"|\')?[^\"^\'^\s^\>]*(\"|\')?)))*\s*\/*>))", "gmi")
		);

	for(var i in tags_arbol){
		tags_arbol[i].replace(/(((\')*\+[^']*\+(\')*)|((\")*\+[^"]*\+(\")*))/gmi,'');		
	}
	
	return {
		tags_arbol:tags_arbol,
		fuente:fuente
	};
	
}
/**
 * Function which calls the different modules of the application. / Función la cual llama a los diferentes módulos de la aplicación
 * @param  {object} parser - Receives the parse function generated by Jison. / Recibe la función parse generada por JISON.
 * @param  {string} html - Contains the browser's HTML code. / Contiene el código HTML del navegador.
 * @return {array} objAST.getAdvertencia - Returns the warnings corresponding to the analysis. / Retorna las advertencias correspondientes al análisis.
 */
function analizarHTML (parser, html) {

    var objHtml = getEtiquetas(html); //  We obtain the labels calling function getEtiquetas() / obtenemos las etiquetas llamando a la función getEtiquetas();
    var htmlOriginal = []; // contain the original HTML unchanged for lack or surplus of tag / contendrá el HTML original sin modificaciones por falta o sobra de etiquetas
    var htmlOriginal2 = []; //contain the HTML original and modified for lack or surplus / contendrá el HTML original con modificaciones por falta o sobra de etiquetas
    var etiSobra = []; // Contain warnings for lack or surplus of tag / Contendrá las advertencias por falta o sobra de etiquetas
    var desplazEli = 1;
    var desplazAgr = 0;
    /**
     * fuente contains the original code returned by the browser / fuente contiene el código original devuelto por el navegador
     * @type {string}
     */
    var fuente = objHtml.fuente; 

    for(var i in objHtml.tags_arbol)
       	htmlOriginal.push(objHtml.tags_arbol[i]) //copy of the original labels / copia de las etiquetas originales
    
    /**
     * resulRC Get object with missing or extra tag / resulRC Obtiene un objeto con las etiquetas faltantes o sobrantes, además de las respectivas advertencias producidas
     * @type {object}
     */
    var resulRC = revisarCierre(objHtml.tags_arbol,0,[],[]);
    objHtml.tags_arbol = resulRC.tag;
    etiSobra = resulRC.getAdvertencias;
    
    for(var i in objHtml.tags_arbol)
       	htmlOriginal2.push(objHtml.tags_arbol[i]) // backed tags once modified / copia de las etiquetas una vez modificadas

    /**
     * objAST Get tree of parse /objAST obtiene el árbol devuelto por el parse
     * @type {object}
     */
    var objAST = parser.parse(objHtml.tags_arbol.join("\n"));

    
    for(var i in etiSobra)
        objAST.getAdvertencia.splice(0,desplazAgr,etiSobra[i]); // added to the general warnings / se agregan a las advertencias generales

   recArbolHTML(objAST.getArbol.documento,'document',objAST.getAdvertencia,null,"",objAST.getArbol.doctype, objAST.getArbol.linea); // Travel tree to assess semantic content / Recorrido del árbol para evaluar contenido semántico
   
   // remove line breaks produced within the tags. / eliminamos los saltos de linea producidos dentro de las etiquetas.
   fuente = fuente.replace(/(((<[a-z0-9]+\s*))(([a-z0-9]\-*)\s*(\=+((\"|\')?[^\"^\'^\>]*(\"|\')?))*|(\n|\r|\s))*\s*>)/gmi,function(flag){
   		var numR = flag.split("\n");
   		
   		var saltos = '';
   		if(numR.length > 1){
   			
   			for(var i =0; i<numR.length-1;i++){
   				saltos += "\n";
   			}
   			
   			flag = flag.replace(/((\n)*)/gmi,'')
   			flag = flag.replace(/(\s+)/gmi,' ')

   			flag = flag + saltos;
   		}
   		
   		return flag;
   }); // convierte el codigo de una misma etiqueta, en 1 sola completa con saltos de linea la diferencia
   
   var lineasFuente = fuente.match(
		new RegExp("((\n+[^\n]*\n*)|(\n*[^\n]*\n*)|(\n*[^\n]*\n+)|(\n+[^\n]*\n+))", "gmi")
		); //each line becomes a position in the array / convierte cada linea en una posicion en el vector
 
	objAST.getadvertencia = traducirLinea(lineasFuente,htmlOriginal,htmlOriginal2,objAST.getAdvertencia); // parse output translates to the real numbers of the document / se traduce la salida del parse a la numeración real del documento

    return objAST.getAdvertencia;
}

/**
 * This is a recursive function that checks for missing or extra tags in the document and makes corrections if necessary. / Es una función recursiva la cual revisa la falta o sobra de etiquetas en el documento y corrige de ser necesario.
 * @param  {array} tags - Contains the tags to be reviewed / Contiene las etiquetas a revisar.
 * @param  {number} i - Represents the iteration number to be carried out / Representa el número de iteración a realizar.
 * @param  {array} pila - Array that carries the order of the open tags in the document. / Arreglo que lleva el orden de las etiquetas abiertas en el documento.
 * @param  {array} advertencias - Receives the warnings. / Recibe las advertencias.
 * @return {object} which contains: tag, i, pila, html and getAdvertencias. / El cual contiene: tag, i, pila, html y getAdvertencias.
 */
function revisarCierre(tags, i, pila, advertencias){
        
        var getAdvertencias = advertencias;
        var cig = false;
        var html = tags;
        var r = {
                 tag:tags,
                 i:-1,
                 pila:pila,
                 html:html,
                 getAdvertencias:getAdvertencias
              };
              // if tag is different from null, tag exist / si tag es diferente de null, existen etiquetas
            if(tags !== null){
            	// if tag[i] is different from undefined, we have not reached the last /si tag[i] es diferente de undefined, no hemos llegado a la ultima
	            if(tags[i] !== undefined){	             
	            		//if the label contains no holds close, so we are ignored and continue to the next. / si se cumple la etiqueta no contiene cierre, por lo que se ignorá y continuamos con la siguiente.
	                   if(/(^((<!doctype)|(<base)|(<link)|(<meta)|(<hr)|(<br)|(<wbr)|(<img)|(<embed)|(<param)|(<source)|(<track)|(<area)|(<col)|(<input)|(<keygen)))/gmi.test(tags[i])){
		                   r = revisarCierre(tags,i+1,pila,getAdvertencias);
		                   if(r.i !== -1){
		                       tags = r.tag;
		                       i = r.i;
		                       pila = r.pila;
		                       html = r.html;
		                       getAdvertencias = r.getAdvertencias;
		                   }
		                   else{
		                    return r;
		                   }
	                }
	                else{
	                	// if it is a start tag / si es una etiqueta de inicio
	                    if(/(^(<[a-z0-9]+))/gmi.test(tags[i])){
	                    	// Get name tag / obtenemos el nombre de la etiqueta
	                    	var t = tags[i].split(/(\s)/gmi);
	                    	var t2 = t[0].split('<').join('').split('>').join('').split('/').join('');                    	                   	
	                    	// insert the stack of open tags / insertamos en la pila de etiquetas abiertas
	                        pila.push((t2.split(' ').join('')));
	                     	// We continue to the next label / continuamos hacia la próxima etiqueta
	                        r = revisarCierre(tags,i+1,pila,getAdvertencias);
	                        if(r.i !== -1){
	                            tags = r.tag;
	                            i = r.i;
	                            pila = r.pila;
	                            html = r.html;
	                            getAdvertencias = r.getAdvertencias;
	                        }
	                        else{
	                            return r;
	                        }
	                    }
	                    else{

	                    	/**
	                    	 * if cig is false, spare a tag / si cig es false, sobra una etiqueta
	                    	 * @type {Boolean}
	                    	 */
	                    	cig = false;
	                    	// if it is a closing tag / si es una etiqueta de cierre.
	                        if(/(^(<\/[a-z0-9]*))/gmi.test(tags[i])){

	                            var j = pila.length-1;
	                        	// We reviewed if it is in the stack / revisamos si se encuentra en la pila
	                            while(pila[j] !== (tags[i].split('<').join('').split('/').join('').split('>').join('').split(' ').join('')) && j >= 0){	                                
	                                    j = j - 1;
	                              }
	                            // if there is a match / si existe coincidencia
	                              if(j >= 0 && (pila[j] === (tags[i].split('<').join('').split('/').join('').split('>').join('').split(' ').join('')))){
	                              		/**
	                              		 * n is the difference between the position of the end of the stack where the match was found / n es la diferencia entre, la posición entre el fin de la pila y donde se encontró la coincidencia
	                              		 * @type {number}
	                              		 */
	                                    var n = pila.length-j;                                   
	                                    pila.splice(j, n); //He emptied the distant positions from where it was found towards the end / vaciamos las posiciones distante, desde donde se encontró hacia el final
	                                  
	                                  	// if n is greater than 1, closing tags are missing so the </otro> is added as often as necessary / si n es mayor a 1, faltan etiquetas de cierre, por lo que se agrega la etiqueta </otro> tantas veces sea necesario
	                                    if(n > 1){	                                    	
		                                   for(var k=1;k<n;k++)
		                                    	tags.splice(i, 0, "</otro>");
		                                    
		                                    i = i + (n-1);
	                                    }
	                               
	                                    cig = true;
	                                    
	                              }
	                              
	                              if(!cig){ 

                                    getAdvertencias.push("Etiqueta "+(tags[i].split('<').join('').split('/').join('').split('>').join('').split(' ').join(''))+" sobra en la linea "+i);
                               		tags[i] = '';
                                  
	                                }

	                        }
	                    }

	                }
	                // If the next position exists, we continue / si la proxima posición existe, continuamos
	                while(tags[i+1] !== undefined){
	                    r = revisarCierre(tags,i+1,pila,getAdvertencias);
	                   if(r.i !== -1){
	                            tags = r.tag;
	                            i = r.i;
	                            pila = r.pila;
	                            html = r.html;
	                            getAdvertencias = r.getAdvertencias;
	                        }
	                        else{
	                            return r;
	                        }                   
	                }
	                // If the next position does not exist / si la proxima posición no existe
	                if(tags[i+1] === undefined){
	                	// if there are still elements in the stack / si aun quedan elementos en la pila
	                	if(pila.length>0)
	                    {
	                        var n = pila.length;	                                    
	                        pila.splice(0, n);                      	
		                    for(var k=0;k<n;k++)
		                     	tags.splice(tags.length, 0, "</otro>");
	                    }
	                }



	            }
	            else{
	                return  {
	                 tag:tags,
	                 i:-1,
	                 pila:pila,
	                 html:html,
	                 getAdvertencias:getAdvertencias
	              };
	            }
	        }
            return  {
                 tag:tags,
                 i:-1,
                 pila:pila,
                 html:html,
                 getAdvertencias:getAdvertencias
              };

}
/**
 * Converts the parse output into document output. / Convierte la salida del parse en la salida del documento.
 * @param  {array} lineasFuente - Represents the original document line by line / Representa linea por linea al documento original.
 * @param  {array} htmlOriginal - Represents the separated tags, before the closing review. / Representa las etiquetas separadas, antes de la revisión de cierre.
 * @param  {array} htmlOriginal - Represents the separated tags, after the closing review. / Representa las etiquetas separadas, después de la revisión de cierre.
 * @param  {array} objAST.getAdvertencia - Contains the warnings. / Contiene las advertencias.
 * @return {array} getAdvertencia - The warnings already modified to match the analyzed document. / Las advertencias ya modificadas para que coincidan con el documento analizado.
 */
function traducirLinea(linea, htmlOriginal, html, getAdvertencia){
	
	var paralelo = []; //contain real numbers by line HTMLoriginal / contendrá los números reales por linea de HTMLoriginal
	var k = 0;	// iterador
	var w = 0;  // iterador

	// while k is less the top rate of html, add the </otro> in original html (htmlOriginal) if found in html modified / mientras k sea menor al indice superior de html, agregamos la etiqueta </otro> en el html original (htmlOriginal) si es encontrada en el html modificado
	while(k < html.length){
		if(html[k] === '</otro>'){
			htmlOriginal.splice(k, 0, "</otro>");
		}

		k++;
	}

	k = 0;
	w = 0;

	// while k is less htmlOriginal, we find the position of the labels on the page source code and place it in the parallel arrangement / mientras k sea menor que htmlOriginal, buscaremos la posición de las etiquetas en el código fuente de la página y las colocaremos en el arreglo paralelo
	while(k < htmlOriginal.length){
		if(htmlOriginal[k] === '</otro>'){
			paralelo[k] = w+1;
		}
		else{
				// if existing line breaks in the tags will be removed to facilitate comparison / si existir saltos de linea en las etiquetas serán eliminados para facilitar la comparación
				var saltos = htmlOriginal[k].split('\n');
				if(saltos.length > 1){
					htmlOriginal[k] = htmlOriginal[k].replace(/((\n)*)/gmi,'')
	   				htmlOriginal[k] = htmlOriginal[k].replace(/(\s+)/gmi,' ')
		   		}
		   		// if different, it increases the value of the iterator w / si no coincide, aumenta el valor del iterador w
				while(linea[w].indexOf(htmlOriginal[k]) < 0){	
					w = w + 1;
				}
				// if it matches the value of w is added to the parallel arrangement / si coincide se agrega el valor de w al arreglo paralelo
				if(linea[w].indexOf(htmlOriginal[k]) >= 0){
					paralelo[k] = w+1;
				}
				
			}

			k = k + 1;
			
	}

	var v1 = []; //save  the value of warnings produced in the syntactic and semantic analysis / guarda el valor de las advertencias producidas en el analisis sintáctico y semántico

	//get the line number it occurred warnings / obtenemos el número de linea en que se produjo las advertencias
	for(var i in getAdvertencia){

		var re = /((linea\s*)(\d*)*.*)/gmi; 
		var str = getAdvertencia[i];
		var lin = [];
		
		if ((lin = re.exec(str)) !== null) {
		    if (lin.index === re.lastIndex) {
		        re.lastIndex++;
		    }		    		   	    
		}
		
		lin[3] = lin[3];

		v1.push(parseInt(lin[3]));

	}
	// ordered warnings Ascending / ordena las advertencias de menor a mayor 
	var aux, aux2;
         for(var i=0;i<v1.length-1;i++){
              for(var j=0;j<v1.length-i-1;j++){
                   if(v1[j+1]<v1[j]){
                      aux=v1[j+1];
                      aux2=getAdvertencia[j+1];
                      v1[j+1]=v1[j];
                      getAdvertencia[j+1]=getAdvertencia[j];
                      v1[j]=aux;
                      getAdvertencia[j]=aux2;
                   }
               }
            }
		
	
        // translates the value produced in the lexical analysis, parsing the actual value of the document / traduce el valor producido en el análisis léxico, sintáctico al valor real del documento
		for(var i= 0; i<v1.length; i++)
			getAdvertencia[i] = getAdvertencia[i].replace((new RegExp("("+v1[i]+")")),paralelo[v1[i]]);		
			         

	return getAdvertencia;
};


/**
 * This is a recursive function that handles the semantic analysis of the structure. / Es una función recursiva la cual se encarga del análisis semántico de la estructura.
 * @param  {object} etiqueta - Contains the AST structure to be covered. / Contiene la estructura AST a recorrer.
 * @param  {string} nomEP - Contains the name of the top-level tag. / Contiene el nombre de la etiqueta de nivel superior.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @param  {array} etiStop - Will contain the tags that should not be covered, as appropriate. / Contendrá las etiquetas que no se deben recorrer de ser el caso.
 * @param  {vtrasp} vtransp - Contains the rules used in the analysis of the top-level tag (must be transparent-type) / Contiene las reglas utilizadas en el análisis de la etiqueta de nivel superior (necesaria de ser de tipo transparente)
 * @param  {doctype} doctype - Will only exist at the start of the analysis and will contain the doctype, as the case may be. / Solo existira al inicio del análisis y contendrá el doctype según sea el caso.
 * @param  {number} lineaDoctype - If any, will indicate where the doctype begins. / De existir, indicara donde commienza el doctype
 * @return {array} Returns the warnings produced after the analysis. / Devuelve las advertencias producidas tras el análisis.
 */
function recArbolHTML(etiqueta, nomEP, getAdvertencia, etiStop, vtransp, doctype, lineaDoctype){

	var vect;
	var vectStop = [];
	var stop = etiStop;
	var vTransp = vtransp;
	var valTransp = "";
	var contador = 0;
	var bandera = false; 
	var bandera2 = false;
	var continuar = true;
	
	// Exist variable Doctype / si existe la variable doctype
	if(doctype !== undefined){
		// if the variable is not null / si la variable no es nula
		if(doctype !== null){
			var doct = doctype+'>';
			// verify the format / verifícamos el formato
			if(!/((doctype\s*html\s*system\s*(\"|\')about:legacy-compat(\"|\')\s*>)|(doctype\s*html\s*>))/gmi.test(doct))
				getAdvertencia.push("Definición de documento incorrecta o obsoleta para HTML5 en linea "+lineaDoctype+" visite <a href='http://www.w3.org/TR/html5/syntax.html#the-doctype'ht0tp://www.w3.org/TR/html5/syntax.html#the-doctype</a> ");
		}
		else{
			getAdvertencia.push("Definición de documento necesaria en la linea 0 visite <a href='http://www.w3.org/TR/html5/syntax.html#the-doctype'http://www.w3.org/TR/html5/syntax.html#the-doctype</a>");
		}
	}

	for (var i in etiqueta){
		// There are child nodes / existen nodos hijos
		if(etiqueta[i].hasOwnProperty("h_der")){
			
			if(vTransp instanceof Array )
				recArbolHTML(etiqueta[i].h_der,nomEP,getAdvertencia, stop,JSON.stringify(vTransp));
			else
				recArbolHTML(etiqueta[i].h_der,nomEP,getAdvertencia, stop,vTransp);

			break;
		}
		/**
		 * If continuar is true, the tag analyze. / si continuar es true, la etiqueta se podrá recorrer.
		 * @type {Boolean}
		 */
		continuar = true;
		if(stop !== undefined && stop !== null){
			//is searched Stop arrangement, if any of the tag match, you can not go / se busca en el vector Stop, si alguna de las etiquetas coincide, no se podrá recorrer
			for(var j in stop){			
				if(stop[j] === etiqueta[i].nombre){
					continuar = false;
				}
			}
		}

		if(continuar){
			// We are looking name tags and the necessary analysis is performed according to each tag /  buscamos las etiquetas por nombre y se realiza el análisis necesarias según cada etiqueta
			switch(etiqueta[i].nombre){

				case 'html':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia); // se buscan los hijos de la etiqueta
							
							for(var j in vect){ 

							// the necessary comparisons are made as recommended / se realizan las comparaciones necesarias según las recomendaciones
							

								if(vect[j] !== 'head' && vect[j] !== 'body' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);						
									vectStop.push(vect[j]);
								}

								if(vect[j] === 'head' && bandera)
									getAdvertencia.push('Etiqueta '+vect[j]+' de apertura ya existente dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea+" solo debe haber un head existente");
								if(vect[j] === 'head' && !bandera && bandera2){
									bandera = true;
									getAdvertencia.push('Etiqueta '+vect[j]+' debe encontrarse antes de body dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea);
								}
								
								if(vect[j] === 'head' && !bandera && !bandera2)
									bandera = true;

								if(vect[j] === 'body' && bandera2)									
									getAdvertencia.push('Etiqueta '+vect[j]+' de apertura ya existente dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea+" solo debe haber un body existente");							
								if(vect[j] === 'body' && bandera && !bandera2)
									bandera2 = true;							
								if(vect[j] === 'body' && !bandera){
									getAdvertencia.push('Etiqueta '+vect[j]+' encontrada sin head previo dentro del '+etiqueta[i].nombre+' la linea '+etiqueta[i].linea);	
									if(!bandera2)
										bandera2 = true;
									else
										getAdvertencia.push('Etiqueta '+vect[j]+' de apertura ya existente dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea+" solo debe haber un body existente");
								}

							}
							valTransp = '["head","body"]'; // the rules of the parent element to the next iteration are sent (valid for exitencia element type mirrors) / se envian las reglas del elemento padre a la proxima iteración (valido por exitencia de elementos de tipo espejos)
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'head':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'base' && vect[j] !== 'link' && vect[j] !== 'meta' && vect[j] !== 'noscript' && vect[j] !== 'script' && vect[j] !== 'style' && vect[j] !== 'template' && vect[j] !== 'title' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}

								if(vect[j] === 'base')
								{
									if(!bandera)
										bandera = true;								
									else
										getAdvertencia.push('No debe haber más de una etiqueta '+vect[j]+' dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea);
								}
								if(vect[j] === 'title')
								{
									if(!bandera2)
										bandera2 = true;								
									else
										getAdvertencia.push('No debe haber más de una etiqueta '+vect[j]+' dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea);
								}

							}

							if(!bandera2)
								getAdvertencia.push('Debe existir un elemento title dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea)

							valTransp = '["base","link","meta","noscript","script","style","template","title"]';

					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);
						
					break;
				case 'title':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){							
								getAdvertencia.push('Etiqueta invalida '+vect[j]+' dentro de '+etiqueta[i].nombre+'de la linea '+etiqueta[i].linea+' solo es valido texto dentro de '+etiqueta[i].nombre);
							}
					}
			
					break;
				case 'base':break;
				case 'link':break;
				case 'meta':break;
				case 'style':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){							
								getAdvertencia.push('Etiqueta invalida '+vect[j]+' dentro de '+etiqueta[i].nombre+' de la linea '+etiqueta[i].linea);
							}
					}

					break;
				case 'body':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure' && vect[j] !== 'footer' && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'header' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'main' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address" ,"article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);
						


					break;
				case 'article':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure' && vect[j] !== 'footer' && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'header' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'section':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure' && vect[j] !== 'footer' && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'header' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'main' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'nav':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure' && vect[j] !== 'footer' && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'header' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'aside':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure' && vect[j] !== 'footer' && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'header' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h1':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h2':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h3':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h4':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp ='["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h5':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp ='["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'h6':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp ='["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'header':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure'  && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","form","h1","h2","h3","h4","h5","h6","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'footer':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address'  && vect[j] !== 'article' && vect[j] !== 'aside' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure'  && vect[j] !== 'form' && vect[j] !== 'h1' && vect[j] !== 'h2' && vect[j] !== 'h3' && vect[j] !== 'h4' && vect[j] !== 'h5' && vect[j] !== 'h6' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'nav' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'section' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","form","h1","h2","h3","h4","h5","h6","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'address':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'address' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'blockquote' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'div' && vect[j] !== 'dl' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'fieldset' && vect[j] !== 'figure'  && vect[j] !== 'form' && vect[j] !== 'hr' && vect[j] !== 'i' && vect[j] !== 'iframe' && vect[j] !== 'img' && vect[j] !== 'input' && vect[j] !== 'ins' && vect[j] !== 'kbd' && vect[j] !== 'keygen' && vect[j] !== 'label' && vect[j] !== 'map' && vect[j] !== 'mark' && vect[j] !== 'math' && vect[j] !== 'meter' && vect[j] !== 'noscript' && vect[j] !== 'object' && vect[j] !== 'ol' && vect[j] !== 'output' && vect[j] !== 'p' && vect[j] !== 'pre' && vect[j] !== 'progress' && vect[j] !== 'q' && vect[j] !== 'ruby' && vect[j] !== 's' && vect[j] !== 'samp' && vect[j] !== 'script' && vect[j] !== 'select' && vect[j] !== 'small' && vect[j] !== 'span' && vect[j] !== 'strong' && vect[j] !== 'sub' && vect[j] !== 'sup' && vect[j] !== 'svg' && vect[j] !== 'table' && vect[j] !== 'template' && vect[j] !== 'textarea' && vect[j] !== 'time' && vect[j] !== 'u' && vect[j] !== 'ul' && vect[j] !== 'var' && vect[j] !== 'video' && vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","form","hr","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'p':				
										
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'hr':break;
				case 'pre':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'blockquote':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr'  ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'ol':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j]  !== 'li' && vect[j] !== 'script' && vect[j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["li","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'li':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);									

							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'ul':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j]  !== 'li' && vect[j] !== 'script' && vect[j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
								valTransp = '["li","script","template"]';
							}
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'dl':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j]  !== 'dt' && vect[j]  !== 'dd' && vect[j] !== 'script' && vect[j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["dt","dd","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'dt':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'form' &&   vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script'  &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr'  ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","form","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'dd':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'figure':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'figcaption' && vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["figcaption","a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'figcaption':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'div':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'main':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'a':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);

							sepContInteractivo(etiqueta[i],getAdvertencia);										

							vTransp = vTransp.replace(new RegExp("((\"a\")|button|embed|iframe|keygen|label|select|textarea)","gmi"),'');
							vTransp = vTransp.replace(/(\[,)/gmi,'[');
							vTransp = vTransp.replace(/(,\])/gmi,']');								
							vTransp = vTransp.replace(/(\s)/gmi,'');		
							
							while(/(\,\,)/gmi.test(vTransp)){
							
								vTransp = vTransp.replace(/(,,)/gmi,',');

							}
							
							vTransp = JSON.parse(vTransp);
							
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp); 
							
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'em':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'strong':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'small':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 's':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'cite':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'q':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'dfn':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'abbr':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'data':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'time':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'code':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'var':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'samp':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'kbd':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'sub':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'sup':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'i':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'b':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'u':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'mark':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'ruby':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'rb' && vect[j] !== 'rt' && vect[j] !== 'rtc' && vect[j] !== 'rp' && vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["rb","rt","rtc","rp","a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'rb':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'rt':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'rtc':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'rt' &&  vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["rt","a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'rp':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'bdi':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'bdo':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'span':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'br':break;
				case 'wbr':break;
				case 'ins':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);
													
							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'del':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);

							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);
					
					break;
				case 'img':break;
				case 'iframe':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'embed':break;
				case 'object':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);				
							vTransp = JSON.parse(vTransp);		
							if(!/(param)/i.test(vTransp)){
								vTransp.push('param');						
							}

							for(var j in vect){							
								if(vect[i] === 'param')
									bandera = true;
							}

							if(bandera){
								for(var j in vect){
									contador = 0;
									for(var k in vTransp){
										
										if(vect[j] !== vTransp[k])
											contador = contador + 1;
																		
											if(contador === vTransp.length){
												getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
												vectStop.push(vect[j]);	
											}								
									}
								}
							}
							else{
								for(var j in vect){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);									
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'param':break;
				case 'video':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var k in etiqueta[i].atr){			
								if(Object.keys(etiqueta[i].atr[k]).toString().toLowerCase() === 'src'){
									bandera = false;
								}
								else{
									bandera = true;
								}		
							}
							

							if(bandera){
								vTransp = vTransp.replace(/(])/gmi,',"track"]');							
								vTransp = vTransp.replace(/(("audio"|"video"))/gmi,'');
								vTransp = vTransp.replace(/(\[,)/gmi,'[');
								vTransp = vTransp.replace(/(,\])/gmi,']');								
								vTransp = vTransp.replace(/(\s)/gmi,'');		
							
									while(/(\,\,)/gmi.test(vTransp)){
									
										vTransp = vTransp.replace(/(,,)/gmi,',');

									}
							}
							else{
								vTransp = vTransp.replace(/(])/gmi,',"source","track"]');							
								vTransp = vTransp.replace(/(("audio"|"video"))/gmi,'');
								vTransp = vTransp.replace(/(\[,)/gmi,'[');
								vTransp = vTransp.replace(/(,\])/gmi,']');								
								vTransp = vTransp.replace(/(\s)/gmi,'');		
							
									while(/(\,\,)/gmi.test(vTransp)){
									
										vTransp = vTransp.replace(/(,,)/gmi,',');

									}
							}
						
							
							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);


					break;
				case 'audio':				
						
						if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);

							for(var k in etiqueta[i].atr){			
								if(Object.keys(etiqueta[i].atr[k]).toString().toLowerCase() === 'src'){
									bandera = false;
								}
								else{
									bandera = true;
								}
									
							}
							

							if(bandera){
								vTransp = vTransp.replace(/(])/gmi,',"track"]');							
								vTransp = vTransp.replace(/(("audio"|"video"))/gmi,'');
								vTransp = vTransp.replace(/(\[,)/gmi,'[');
								vTransp = vTransp.replace(/(,\])/gmi,']');								
								vTransp = vTransp.replace(/(\s)/gmi,'');		
							
									while(/(\,\,)/gmi.test(vTransp)){
									
										vTransp = vTransp.replace(/(,,)/gmi,',');

									}
							}
							else{
								vTransp = vTransp.replace(/(])/gmi,',"source","track"]');							
								vTransp = vTransp.replace(/(("audio"|"video"))/gmi,'');
								vTransp = vTransp.replace(/(\[,)/gmi,'[');
								vTransp = vTransp.replace(/(,\])/gmi,']');								
								vTransp = vTransp.replace(/(\s)/gmi,'');		
							
									while(/(\,\,)/gmi.test(vTransp)){
									
										vTransp = vTransp.replace(/(,,)/gmi,',');

									}
							}
						
							
							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'source':break;
				case 'track':break;
				case 'map':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);
													
							if(/(area)/i.test(vTransp))
								vTransp = JSON.parse(vTransp);
							else{
								vTransp.push('area');
								vTransp = JSON.parse(vTransp);
							}

							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'area':break;
				case 'table':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'caption' && vect[j] !== 'colgroup' && vect[j] !== 'thead' && vect[j] !== 'tfoot' && vect[j] !== 'tbody' && vect[j] !== 'tr' && vect[j] !== 'script' && vect[j] !== 'template' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["caption","colgroup","thead","tfoot","tbody","tr","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'caption':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg'  &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'colgroup':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var k in etiqueta[i].atr){			
								if(Object.keys(etiqueta[i].atr[k]).toString().toLowerCase() === 'span')

										if(etiqueta[i].cierre === 'false'){
											getAdvertencia.push("Error en etiqueta "+etiqueta[i].nombre+" de cierre faltante en linea "+etiqueta[i].linea_cierre);  
										}
									bandera = true;
							}
							if(!bandera){
								for(var j in vect){
									if(vect [j] !== 'col' && vect [j] !== 'template'){
										getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
										vectStop.push(vect[j]);
									}		
								}
								valTransp = '["col","template"]';
							}
							else{
								for(var j in vect){								
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);										
								}
							}
							
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'col':break;
				case 'tbody':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'tr' && vect [j] !== 'script' && vect [j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["tr","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'thead':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'tr' && vect [j] !== 'script' && vect [j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["tr","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'tfoot':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'tr' && vect [j] !== 'script' && vect [j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["tr","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'tr':				

					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'td' && vect [j] !== 'th' && vect [j] !== 'script' && vect [j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["td","th","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);			

					break;
				case 'td':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg'  &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' &&  vect [j] !== 'table'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'th':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'form'  &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script'  &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg'  &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' &&  vect [j] !== 'table'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","form","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'form':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg'  &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' &&  vect [j] !== 'table'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'label':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							sepContEtiquetable(etiqueta[i],getAdvertencia);

							for(var j in vect){
								if(vect[j] !== 'input' && vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["input",a","abbr","area","audio","b","bdi","bdo","br","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","ins","kbd","map","mark","math","noscript","object","q","ruby","s","samp","script","small","span","strong","sub","sup","svg","template","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'input':break;
				case 'button':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							sepContInteractivo(etiqueta[i],getAdvertencia)
							for(var j in vect){
								if(vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'i' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&   vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["abbr","area","audio","b","bdi","bdo","br","canvas","cite","code","data","datalist","del","dfn","em","i","img","input","ins","kbd","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","small","span","strong","sub","sup","svg","template","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'select':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'option' && vect[j] !== 'optgroup' && vect[j] !== 'script' && vect[j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["option","optgroup","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'datalist':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'option' && vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["option","a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'optgroup':				
						
						if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'option' && vect[j] !== 'script' && vect[j] !== 'template'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["option","script","template"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'option':				

					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
								for(var j in vect){
										getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
										vectStop.push(vect[j]);
						
								}
								valTransp = '[]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'textarea':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);									
					
								for(var j in vect){								
										getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
										vectStop.push(vect[j]);
								}
								valTransp = '[]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);		

					break;
				case 'keygen':break;
				case 'output':				

					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'progress':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'meter':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'fieldset':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect [j] !== 'legend' && vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr' ){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["legend","a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'legend':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);
							
							for(var j in vect){
								if(vect[j] !== 'a' && vect[j] !== 'abbr' && vect[j] !== 'area' && vect[j] !== 'audio' && vect[j] !== 'b' && vect[j] !== 'bdi' && vect[j] !== 'bdo' && vect[j] !== 'br' && vect[j] !== 'button' && vect[j] !== 'canvas' && vect[j] !== 'cite' && vect[j] !== 'code' && vect[j] !== 'data' && vect[j] !== 'datalist' && vect[j] !== 'del' && vect[j] !== 'dfn' && vect[j] !== 'em' && vect[j] !== 'embed' && vect[j] !== 'i' && vect[j] !== 'iframe' &&  vect[j] !== 'img' &&  vect[j] !== 'input' &&  vect[j] !== 'ins' &&  vect[j] !== 'kbd' &&  vect[j] !== 'keygen' &&  vect[j] !== 'label' &&  vect[j] !== 'map' &&  vect[j] !== 'mark' &&  vect[j] !== 'math' &&  vect[j] !== 'meter' &&  vect[j] !== 'noscript' &&  vect[j] !== 'object' &&  vect[j] !== 'output' &&  vect[j] !== 'progress' &&  vect[j] !== 'q' &&  vect[j] !== 'ruby' &&  vect[j] !== 's' &&  vect[j] !== 'samp' &&  vect[j] !== 'script' &&  vect[j] !== 'select' &&  vect[j] !== 'small' &&  vect[j] !== 'span' &&  vect[j] !== 'strong' &&  vect[j] !== 'sub' &&  vect[j] !== 'sup' &&  vect[j] !== 'svg' &&  vect[j] !== 'template' &&  vect[j] !== 'textarea' &&  vect[j] !== 'time' &&  vect[j] !== 'u' &&  vect[j] !== 'var' &&  vect[j] !== 'video' &&  vect[j] !== 'wbr'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","script","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr"]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);

					break;
				case 'script':				
					
					if(etiqueta[i].h_izq[0] !== null) {
							vect = buscarHijos(etiqueta[i],getAdvertencia);									
					
							for(var j in vect){								
								getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
								vectStop.push(vect[j]);
							}
							valTransp = '[]';
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);		

					break;
				case 'noscript':							
					
					if(etiqueta[i].h_izq[0] !== null) {

						vect = buscarHijos(etiqueta[i],getAdvertencia);

						if(nomEP === 'head'){

							for(var j in vect){
								if(vect[j] !== 'link' && vect[j] !== 'style' && vect[j] !== 'meta'){
									getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
									vectStop.push(vect[j]);
								}		
							}
							valTransp = '["link","style","meta"]';
					
						}
						else{		

							vTransp = vTransp.replace(/(("noscript"))/gmi,'');
							vTransp = vTransp.replace(/(\[,)/gmi,'[');
							vTransp = vTransp.replace(/(,\])/gmi,']');								
							vTransp = vTransp.replace(/(\s)/gmi,'');		
							
							while(/(\,\,)/gmi.test(vTransp)){
									
								vTransp = vTransp.replace(/(,,)/gmi,',');

							}	
													
							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
						}
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);			

					break;
				case 'template':				
					
					if(etiqueta[i].h_izq[0] !== null) {

						vect = buscarHijos(etiqueta[i],getAdvertencia);

						if(nomEP === 'ol' || nomEP === 'ul' || nomEP === 'dl' || nomEP === 'figure' || nomEP === 'ruby' || nomEP === 'Object' || nomEP === 'video' || nomEP === 'audio' || nomEP === 'table' || nomEP === 'colgroup' || nomEP === 'thead' || nomEP === 'tfoot' || nomEP === 'tbody' || nomEP === 'tr' || nomEP === 'fieldset' || nomEP === 'select'){

							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);					
					
						}
						else{															
							if(nomEP === 'head'){
								for(var j in vect){
									if(vect [j] !== 'base' && vect [j] !== 'link' && vect [j] !== 'meta' && vect [j] !== 'noscript' && vect [j] !== 'script' && vect [j] !== 'style' && vect [j] !== 'template' && vect [j] !== 'title'){
										getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
										vectStop.push(vect[j]);
									}		
								}
								valTransp = '["base","link","meta","noscript","script","style","template","title"]';
							}
							else{
								for(var j in vect){
									if(vect [j] !== 'a' && vect [j] !== 'abbr' && vect [j] !== 'address' && vect [j] !== 'article' && vect [j] !== 'aside' && vect [j] !== 'audio' && vect [j] !== 'b' && vect [j] !== 'bdi' && vect [j] !== 'bdo' && vect [j] !== 'blockquote' && vect [j] !== 'br' && vect [j] !== 'button' && vect [j] !== 'canvas' && vect [j] !== 'cite' && vect [j] !== 'code' && vect [j] !== 'data' && vect [j] !== 'datalist' && vect [j] !== 'del' && vect [j] !== 'dfn' && vect [j] !== 'div' &&  vect [j] !== 'dl' &&  vect [j] !== 'em' &&  vect [j] !== 'embed' &&  vect [j] !== 'fieldset' &&  vect [j] !== 'figure' &&  vect [j] !== 'footer' &&  vect [j] !== 'form' &&  vect [j] !== 'h1' &&  vect [j] !== 'h2' &&  vect [j] !== 'h3' &&  vect [j] !== 'h4' &&  vect [j] !== 'h5' &&  vect [j] !== 'h6' &&  vect [j] !== 'header' &&  vect [j] !== 'hr' &&  vect [j] !== 'i' &&  vect [j] !== 'iframe' &&  vect [j] !== 'img' &&  vect [j] !== 'input' &&  vect [j] !== 'ins' &&  vect [j] !== 'kbd' &&  vect [j] !== 'keygen' &&  vect [j] !== 'label' &&  vect [j] !== 'main' &&  vect [j] !== 'map' &&  vect [j] !== 'mark' &&  vect [j] !== 'math' &&  vect [j] !== 'meter' &&  vect [j] !== 'nav' &&  vect [j] !== 'noscript' &&  vect [j] !== 'object' &&  vect [j] !== 'ol' &&  vect [j] !== 'output' &&  vect [j] !== 'p' &&  vect [j] !== 'pre' &&  vect [j] !== 'progress' &&  vect [j] !== 'q' &&  vect [j] !== 'ruby' &&  vect [j] !== 's' &&  vect [j] !== 'samp' &&  vect [j] !== 'script' &&  vect [j] !== 'section' &&  vect [j] !== 'select' &&  vect [j] !== 'small' &&  vect [j] !== 'span' &&  vect [j] !== 'strong' &&  vect [j] !== 'sub' &&  vect [j] !== 'sup' &&  vect [j] !== 'svg' &&  vect [j] !== 'table' &&  vect [j] !== 'template' &&  vect [j] !== 'textarea' &&  vect [j] !== 'time' &&  vect [j] !== 'u' &&  vect [j] !== 'ul' &&  vect [j] !== 'var' &&  vect [j] !== 'video' &&  vect [j] !== 'wbr'){
										getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
										vectStop.push(vect[j]);
									}		
								}
								valTransp = '["a","abbr","address","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","cite","code","data","datalist","del","dfn","div","dl","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","keygen","label","main","map","mark","math","meter","nav","noscript","object","ol","output","p","pre","progress","q","ruby","s","samp","script","section","select","small","span","strong","sub","sup","svg","table","template","textarea","time","u","ul","var","video","wbr"]';	
							}
						}
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);			

					break;
				case 'canvas':				
					
					if(etiqueta[i].h_izq[0] !== null) {

							vect = buscarHijos(etiqueta[i],getAdvertencia);

							vTransp = JSON.parse(vTransp);
							for(var j in vect){
								contador = 0;
								for(var k in vTransp){
									
									if(vect[j] !== vTransp[k])
										contador = contador + 1;
																	
										if(contador === vTransp.length){
											getAdvertencia.push("Etiqueta "+vect[j]+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" en la linea "+etiqueta[i].linea);					
											vectStop.push(vect[j]);	
										}								
								}
							}
							valTransp = JSON.stringify(vTransp);
					}

					hIzqFuncion(etiqueta[i],etiqueta[i].nombre,getAdvertencia,vectStop,valTransp);
					
					break;
				case 'svg':break;
				case 'math':break;

			}
		}
	
	}

	return getAdvertencia;
}

/**
 * Function activated by covering tree. / Función activada por reccorer árbol.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {string} nomEP - Contains the name of the top-level tag. / Contiene el nombre de la etiqueta de nivel superior.
 * @param  {array} getAdvertencia -  Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @param  {array} vectStop - Will contain the tags that should not be covered, as appropriate. / Contendrá las etiquetas que no se deben recorrer de ser el caso.
 * @param  {vtrasp} vtransp - Contains the rules used in the analysis of the top-level tag (must be transparent-type) / Contiene las reglas utilizadas en el análisis de la etiqueta de nivel superior (necesaria de ser de tipo transparente)
 * @return {number} Returns 0 once the iteration has completed. / Retorna 0 una vez terminada la iteración
 */

function hIzqFuncion(etiqueta, nomEP,getAdvertencia,vectStop,vtransp){

	// validates the tree traversal and indicates the next node to visit / valida el recorrido del árbol e indica el proximo nodo a visitar
	if(typeof etiqueta !== 'undefined'){

		if(etiqueta.h_izq[0] !== null)
			recArbolHTML(etiqueta.h_izq,nomEP,getAdvertencia,vectStop,vtransp);
					
		if(etiqueta.h_izq.length > 1)
			if(etiqueta.h_izq[1] !== null)
				recArbolHTML(etiqueta.h_izq[1],nomEP,getAdvertencia,vectStop,vtransp);
											
	}
	return 0;
}


/**
 * This is called from the buscarHijos function. / Es llamada desde la función buscarHijos.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {string} Returns the children, separated by commas. / Devuelve los hijos, separados por coma.
 */
function getEtiquetaHija(etiqueta, getAdvertencia){
	
	var hijos = " ";
	// searches the tag child elements / busca en la etiqueta los elementos hijos
	for (var i in etiqueta){
		if(typeof etiqueta[i] !== 'undefined'){
		    hijos += '"'+etiqueta[i].nombre + '",';  //concatenates the names of the items found / concatena el nombre de los elementos encontrados
			if(etiqueta[i].hasOwnProperty("h_der") === true)		
				hijos += getEtiquetaHija(etiqueta[i].h_der,getAdvertencia);							
		}
	}
		
	return hijos;

}
/**
 * This is called from the recArbolHTML function. / Es llamada desde la función recArbolHTML.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {array} Returns the children of the tag. / Devuelve los hijos de la etiqueta.
 */
function buscarHijos(etiqueta, getAdvertencia){
	var result = getEtiquetaHija(etiqueta.h_izq,getAdvertencia).replace(/((,undefined)|\s)+/gmi,'');				
						
	result = result.substring(0, result.length-1); // removes the last character ',' / elimina el ultimo caracter ','

	var vect = JSON.parse('['+result+']'); //makes an arrangement / lo convierte en un arreglo
	vect = vect.filter(function(val){
	    return val != "undefined"
	}); 
	
	return vect;
}

/**
 * Validates interactive content. / Valida contenido interactivo.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {string} nomEP - Contains the name of the top-level tag. / Contiene el nombre de la etiqueta de nivel superior.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {number} Returns 1 once the iteration has completed. / Retorna 1 una vez terminada la iteración
 */

function valContInteractivo(etiqueta, nomEP, getAdvertencia){
	// validates and returns the necessary warnings as recommended / valida y devuelve las advertencias necesarias según las recomendaciones
	for (var i in etiqueta){

		if(typeof etiqueta[i] !== 'undefined'){

			if(etiqueta[i].nombre === 'audio'){
				for(var j in etiqueta[i].atr){
					if(Object.keys(etiqueta[i].atr[j]).toString().toLowerCase() === 'controls'){
						 
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo controls en la linea "+etiqueta[i].linea);					
					}
				}
			}

			if(etiqueta[i].nombre === 'img'){
				for(var j in etiqueta[i].atr){
					if(Object.keys(etiqueta[i].atr[j]).toString().toLowerCase() === 'usemap'){
						
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo usemap en la linea "+etiqueta[i].linea);					
					}
				}
			}

			if(etiqueta[i].nombre === 'input'){
				for(var j in etiqueta[i].atr){
					var clave = Object.keys(etiqueta[i].atr[j]).toString().toLowerCase();
            		var valor = etiqueta[i].atr[j][clave].toString().toLowerCase();
					if(clave=== 'type' && valor !== 'hidden'){
						
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo type de valor diferente de hidden en la linea "+etiqueta[i].linea);					
					}
				}
			}
		     
		    if(etiqueta[i].nombre === 'object'){
				for(var j in etiqueta[i].atr){
					if(Object.keys(etiqueta[i].atr[j]).toString().toLowerCase() === 'usemap'){
						
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo usemap en la linea "+etiqueta[i].linea);					
					}
				}
			}

			if(etiqueta[i].nombre === 'video'){
				for(var j in etiqueta[i].atr){
					if(Object.keys(etiqueta[i].atr[j]).toString().toLowerCase() === 'controls'){
						
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo controls en la linea "+etiqueta[i].linea);					
					}
				}
			}			

			if(etiqueta[i].hasOwnProperty("h_der") === true)		
				valContInteractivo(etiqueta[i].h_der,nomEP,getAdvertencia);							
		}
	}
		
	return 1;

}
/**
 * Calls the interactive content function. / Llama a la función contenido interactivo.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {number} retorna 1 / Returns 1.
 */
function sepContInteractivo(etiqueta, getAdvertencia){

	return valContInteractivo(etiqueta.h_izq,etiqueta.nombre,getAdvertencia);				
}

/**
 * Validates tagable content. / Valida contenido etiquetable.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {string} nomEP - Contains the name of the top-level tag. / Contiene el nombre de la etiqueta de nivel superior.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {number} Returns 1 once the iteration has completed. / Retorna 1 una vez terminada la iteración
 */

function valContEtiquetable(etiqueta, nomEP, getAdvertencia){

	// validates and returns the necessary warnings as recommended / valida y devuelve las advertencias necesarias según las recomendaciones
	
	for (var i in etiqueta){

		if(typeof etiqueta[i] !== 'undefined'){

			if(etiqueta[i].nombre === 'input'){
				for(var j in etiqueta[i].atr){
					var clave = Object.keys(etiqueta[i].atr[j]).toString().toLowerCase();
            		var valor = etiqueta[i].atr[j][clave].toString().toLowerCase();
					if(clave=== 'type' && valor !== 'hidden'){
						
						getAdvertencia.push("Etiqueta "+nomEP+" no debe ir dentro de la etiqueta "+etiqueta[i].nombre+" por contener el atributo type de valor diferente de hidden en la linea "+etiqueta[i].linea);					
					}
				}
			}

			if(etiqueta[i].hasOwnProperty("h_der") === true)		
				valContEtiquetable(etiqueta[i].h_der,nomEP,getAdvertencia);							
		}
	}
		
	return 1;

}
/**
 * Calls the tagable content function. / Llama a la función contenido etiquetable.
 * @param  {object} etiqueta - Contains the tag to be analyzed. / Contiene la etique a analizar.
 * @param  {array} getAdvertencia - Contains the warnings produced in previous phases. / Contiene las advertencias producidas en fases anteriores.
 * @return {number} retorna 1 / Returns 1.
 */
function sepContEtiquetable(etiqueta, getAdvertencia){

	return valContEtiquetable(etiqueta.h_izq,etiqueta.nombre,getAdvertencia);				
}

